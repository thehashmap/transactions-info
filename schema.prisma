// schema.prisma
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgres"
    url      = env("DATABASE_URL")
}

enum WalletStatus {
    NEEDS_INDEXING
    INDEXING
    INDEXED
    ERROR
}

model Wallet {
    id                  String                @id @default(uuid())
    address             String                @unique
    transactions        Transaction[]
    erc20Transactions   ERC20Transaction[]
    erc721Transactions  ERC721Transaction[]
    status              WalletStatus
    InternalTransaction InternalTransaction[]
    BalanceHistory      BalanceHistory[]
}

model BalanceHistory {
    id              String   @id @default(uuid())
    wallet          Wallet   @relation(fields: [walletId], references: [id])
    walletId        String
    timeStamp       DateTime
    currentBalance  String
    previousBalance String
    balanceChange   String
}

model Transaction {
    id                String   @id @default(uuid())
    hash              String
    blockNumber       String
    timeStamp         DateTime
    from              String
    to                String
    value             String
    nonce             String
    blockHash         String
    transactionIndex  String
    gas               String
    gasPrice          String
    isError           String
    txreceipt_status  String
    input             String
    contractAddress   String
    cumulativeGasUsed String
    gasUsed           String
    confirmations     String
    methodId          String
    functionName      String
    wallet            Wallet   @relation(fields: [walletId], references: [id])
    walletId          String
}

model InternalTransaction {
    id              String   @id @default(uuid())
    hash            String
    blockNumber     String
    timeStamp       DateTime
    from            String
    to              String
    value           String
    input           String
    contractAddress String
    type            String
    traceId         String
    gas             String
    gasUsed         String
    isError         String
    errCode         String
    wallet          Wallet   @relation(fields: [walletId], references: [id])
    walletId        String
}

model ERC20Transaction {
    id                String   @id @default(uuid())
    blockNumber       String
    timeStamp         DateTime
    hash              String
    nonce             String
    blockHash         String
    from              String
    contractAddress   String
    to                String
    value             String
    tokenName         String
    tokenSymbol       String
    tokenDecimal      String
    transactionIndex  String
    gas               String
    gasPrice          String
    gasUsed           String
    cumulativeGasUsed String
    input             String
    confirmations     String
    wallet            Wallet   @relation(fields: [walletId], references: [id])
    walletId          String
}

model ERC721Transaction {
    id                String   @id @default(uuid())
    blockNumber       String
    timeStamp         DateTime
    hash              String
    nonce             String
    blockHash         String
    from              String
    contractAddress   String
    to                String
    tokenID           String
    tokenName         String
    tokenSymbol       String
    tokenDecimal      String
    transactionIndex  String
    gas               String
    gasPrice          String
    gasUsed           String
    cumulativeGasUsed String
    input             String
    confirmations     String
    wallet            Wallet   @relation(fields: [walletId], references: [id])
    walletId          String
}
