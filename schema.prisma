// schema.prisma
generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "cockroachdb"
    url      = env("DATABASE_URL")
}

model Wallet {
    id                 Int                 @id @default(sequence())
    address            String              @unique
    transactions       Transaction[]
    erc20Transactions  ERC20Transaction[]
    erc721Transactions ERC721Transaction[]
}

model Transaction {
    id                Int      @id @default(sequence())
    hash              String   @unique
    blockNumber       String
    timeStamp         DateTime
    from              String
    to                String
    value             String
    nonce             String
    blockHash         String
    transactionIndex  String
    gas               String
    gasPrice          String
    isError           String
    txreceipt_status  String
    input             String
    contractAddress   String
    cumulativeGasUsed String
    gasUsed           String
    confirmations     String
    methodId          String
    functionName      String
    wallet            Wallet   @relation(fields: [walletId], references: [id])
    walletId          Int
}

model ERC20Transaction {
    id                Int      @id @default(sequence())
    blockNumber       String
    timeStamp         DateTime
    hash              String   @unique
    nonce             String
    blockHash         String
    from              String
    contractAddress   String
    to                String
    value             String
    tokenName         String
    tokenSymbol       String
    tokenDecimal      String
    transactionIndex  String
    gas               String
    gasPrice          String
    gasUsed           String
    cumulativeGasUsed String
    input             String
    confirmations     String
    wallet            Wallet   @relation(fields: [walletId], references: [id])
    walletId          Int
}

model ERC721Transaction {
    id                Int      @id @default(sequence())
    blockNumber       String
    timeStamp         DateTime
    hash              String   @unique
    nonce             String
    blockHash         String
    from              String
    contractAddress   String
    to                String
    tokenID           String
    tokenName         String
    tokenSymbol       String
    tokenDecimal      String
    transactionIndex  String
    gas               String
    gasPrice          String
    gasUsed           String
    cumulativeGasUsed String
    input             String
    confirmations     String
    wallet            Wallet   @relation(fields: [walletId], references: [id])
    walletId          Int
}
